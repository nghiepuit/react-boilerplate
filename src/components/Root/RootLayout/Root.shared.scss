:global {
  @import '~@nghiepuit/ui/dist/index';
}

html,
body {
  box-sizing: border-box;
  height: 100%;
  margin: 0;
  font-size: 10px;
  -webkit-overflow-scrolling: touch;
}

@media (max-width: 360px) {
  html,
  body {
    font-size: 9px;
  }
}

@media (max-width: 320px) {
  html,
  body {
    font-size: 8.5px;
  }
}

a {
  // color: $black;
  text-decoration: none;
}

a:hover,
a:active,
a:focus {
  // color: $brand-primary;
  text-decoration: none;
}

body {
  overflow-x: hidden;
  overflow-y: scroll;
  // font-size: $font-medium;
  touch-action: pan-y pinch-zoom;
  // background-color: $bgd-primary;
}

b,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  // font-size: $font-large;
  // font-weight: $font-bold;
}

strong {
  // font-weight: $font-bold;
}

svg {
  box-sizing: border-box;
  overflow: hidden;
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

label {
  margin: 0;
}

input::placeholder {
  // color: $text-color-placeholder;
}

button {
  display: inline-block;
  padding: 0;
  margin: 0;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  background-image: none;
  border: none;

  &:focus,
  &:hover {
    outline: none;
  }
}

:global(.lazyload),
:global(.lazyloading) {
  transform: translateZ(0);
  opacity: 0.5;
  will-change: transform, opacity, filter;
}

:global(.lazyloaded) {
  opacity: 1;
  transform: translateZ(0);
  transition: opacity 150ms;
  will-change: transform, opacity, filter;
  filter: unset;
}

:global(.blur-up) {
  filter: blur(5px);
}

:global(.blur-up):global(.lazyloaded) {
  filter: blur(0);
}

:global(.no-overflow-when-scrolling-hard-code-to-fix-the-fucking-bug) {
  :global(.no-overflow-when-scrolling),
  :global(.ReactVirtualized__Grid) {
    overflow-x: hidden !important;
    overflow-y: hidden !important;
  }
}

:global(.ReactVirtualized__Grid) {
  outline: none;
}
